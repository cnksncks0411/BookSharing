
CREATE TABLE ACC_TRANSFER
(
	ACC_NUMBER           NUMBER(20) NULL ,
	ACC_OWNER            VARCHAR2(10) NULL ,
	ACC_BANK             VARCHAR2(15) NULL ,
	ACC_TRANSFER_CODE    VARCHAR2(6) NOT NULL ,
	POINT_CHARGE_NO      NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKACC_TRANSFER_UQ ON ACC_TRANSFER
(ACC_TRANSFER_CODE   ASC);



ALTER TABLE ACC_TRANSFER
	ADD CONSTRAINT  XPKACC_TRANSFER_PK PRIMARY KEY (ACC_TRANSFER_CODE);



CREATE TABLE B_GRADE_STANDARD
(
	B_GRADE              VARCHAR2(2) NOT NULL ,
	B_DAMAGE             NUMBER(3) NULL 
);



CREATE UNIQUE INDEX XPKB_GRADE_SATNDARD_UQ ON B_GRADE_STANDARD
(B_GRADE   ASC);



ALTER TABLE B_GRADE_STANDARD
	ADD CONSTRAINT  XPKB_GRADE_SATNDARD_UQ PRIMARY KEY (B_GRADE);



CREATE TABLE B_LIST
(
	S_START              DATE NULL ,
	RENT_CHECK           VARCHAR2(2) default 'Y' constraint b_list_rent_ck check(rent_check in ('Y','N')),
	B_NO                 VARCHAR2(10) NOT NULL ,
	S_B_NO               NUMBER(5) NULL ,
	CATEGORY_NO          NUMBER(3) NULL ,
	B_GRADE              VARCHAR2(2) NULL ,
	RENT_COST            NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKB_LIST_UQ ON B_LIST
(B_NO   ASC);



ALTER TABLE B_LIST
	ADD CONSTRAINT  XPKB_LIST_PK PRIMARY KEY (B_NO);



CREATE TABLE B_RENT
(
	B_RENT_NO            NUMBER(10) NOT NULL ,
	B_NO                 VARCHAR2(10) NULL ,
	U_NO                 NUMBER(5) NULL ,
	B_RENT_DATE          DATE NULL ,
	HOPE_DLV_DATE        DATE NULL ,
	B_RECEIVE_DATE       DATE NULL ,
	RETURN_EXPIRE_DATE   DATE NULL 
);



CREATE UNIQUE INDEX XPKB_RENT_UQ ON B_RENT
(B_RENT_NO   ASC);



ALTER TABLE B_RENT
	ADD CONSTRAINT  XPKB_RENT_PK PRIMARY KEY (B_RENT_NO);



CREATE TABLE B_RETURN
(
	RETURN_NO            NUMBER(5) NOT NULL ,
	RETURN_DATE          DATE NULL ,
	HOPE_RETURN_DATE     DATE NULL ,
	B_RENT_NO            NUMBER(10) NULL 
);



CREATE UNIQUE INDEX XPKB_RETURN_UQ ON B_RETURN
(RETURN_NO   ASC);



ALTER TABLE B_RETURN
	ADD CONSTRAINT  XPKB_RETURN_PK PRIMARY KEY (RETURN_NO);



CREATE TABLE CARD
(
	CARD_NO              NUMBER(16) NULL ,
	CARD_OWNER           VARCHAR2(10) NULL ,
	EXPIRY_DATE          DATE NULL ,
	CARD_BANK            VARCHAR2(15) NULL ,
	CARD_CODE            VARCHAR2(6) NOT NULL ,
	POINT_CHARGE_NO      NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKCARD_UQ ON CARD
(CARD_CODE   ASC);



ALTER TABLE CARD
	ADD CONSTRAINT  XPKCARD_PK PRIMARY KEY (CARD_CODE);



CREATE TABLE CATEGORY
(
	CATEGORY_NO          NUMBER(3) NOT NULL ,
	CATEGORY_NAME        VARCHAR2(20) NULL ,
	SECTION_NO           NUMBER(3) NULL 
);



CREATE UNIQUE INDEX XPKCATEGORY_UQ ON CATEGORY
(CATEGORY_NO   ASC);



ALTER TABLE CATEGORY
	ADD CONSTRAINT  XPKCATEGORY_PK PRIMARY KEY (CATEGORY_NO);



CREATE TABLE CHARGE_METHOD
(
	CHARGE_METHOD_CODE   VARCHAR2(3) NOT NULL ,
	CHARGE_METHOD_NAME   VARCHAR2(5) NULL 
);



CREATE UNIQUE INDEX XPKCHARGE_METHOD_UQ ON CHARGE_METHOD
(CHARGE_METHOD_CODE   ASC);



ALTER TABLE CHARGE_METHOD
	ADD CONSTRAINT  XPKCHARGE_METHOD_PK PRIMARY KEY (CHARGE_METHOD_CODE);



CREATE TABLE DELIVERY
(
	DLV_NO               NUMBER(5) NOT NULL ,
	B_RENT_NO            NUMBER(10) NULL ,
	EMPNO                NUMBER(4) NULL ,
	DLV_DATE             DATE NULL ,
	DLV_ADDR             VARCHAR2(50) NULL 
);



CREATE UNIQUE INDEX XPKDELIVERY_UQ ON DELIVERY
(DLV_NO   ASC);



ALTER TABLE DELIVERY
	ADD CONSTRAINT  XPKDELIVERY_PK PRIMARY KEY (DLV_NO);



CREATE TABLE DEPT
(
	DEPTNO               NUMBER(3) NOT NULL ,
	DNAME                VARCHAR2(20) NULL ,
	DROOM_NO             NUMBER(3) NULL ,
	D_PH                 NUMBER(4) NULL ,
	D_INFO               VARCHAR2(50) NULL 
);



CREATE UNIQUE INDEX XPKDEPT_UQ ON DEPT
(DEPTNO   ASC);



ALTER TABLE DEPT
	ADD CONSTRAINT  XPKDEPT_PK PRIMARY KEY (DEPTNO);



CREATE TABLE EMP
(
	EMPNO                NUMBER(4) NOT NULL ,
	ENAME                VARCHAR2(10) NULL ,
	JOB                  VARCHAR2(10) NULL ,
	MGR                  NUMBER(4) NULL ,
	HIREDATE             DATE NULL ,
	SAL                  NUMBER(10) NULL ,
	DEPTNO               NUMBER(3) NULL ,
	COMM                 NUMBER(5) DEFAULT (0)
);



CREATE UNIQUE INDEX XPKEMP_UQ ON EMP
(EMPNO   ASC);



ALTER TABLE EMP
	ADD CONSTRAINT  XPKEMP_PK PRIMARY KEY (EMPNO);



CREATE TABLE GRANT_POINT
(
	GRANT_POINT_NO       NUMBER(5) NOT NULL ,
	GRANT_DATE           DATE NULL ,
	TOTAL_GRANT_POINT    NUMBER(10) NULL ,
	TOTAL_S_B_COUNT      NUMBER(5) NULL ,
	B_NO                 VARCHAR2(10) NULL ,
	U_NO                 NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKGRANT_POINT_UQ ON GRANT_POINT
(GRANT_POINT_NO   ASC);



ALTER TABLE GRANT_POINT
	ADD CONSTRAINT  XPKGRANT_POINT_PK PRIMARY KEY (GRANT_POINT_NO);



CREATE TABLE KDC
(
	SECTION_NO           NUMBER(3) NOT NULL ,
	SECTION_NAME         VARCHAR2(10) NULL 
);



CREATE UNIQUE INDEX XPKKDC ON KDC
(SECTION_NO   ASC);



ALTER TABLE KDC
	ADD CONSTRAINT  XPKKDC PRIMARY KEY (SECTION_NO);



CREATE TABLE KDC
(
	SECTION_NO      NUMBER(3) NOT NULL ,
	SECTION_NAME         VARCHAR2(10) NULL 
);



CREATE UNIQUE INDEX XPKKDC ON KDC
(SECTION_NO   ASC);



ALTER TABLE KDC
	ADD CONSTRAINT  XPKKDC PRIMARY KEY (SECTION_NO);



CREATE TABLE OVERDUE
(
	OVERDUE_NO           NUMBER(5) NOT NULL ,
	OVER_DATE            DATE NULL ,
	OVER_CHARGE          NUMBER(5) NULL ,
	B_RENT_NO            NUMBER(10) NULL 
);



CREATE UNIQUE INDEX XPKOVERDUE_UQ ON OVERDUE
(OVERDUE_NO   ASC);



ALTER TABLE OVERDUE
	ADD CONSTRAINT  XPKOVERDUE_PK PRIMARY KEY (OVERDUE_NO);



CREATE TABLE P_PAY
(
	P_PAY_NAME           VARCHAR2(10) NULL ,
	P_PAY_OWNER          VARCHAR2(10) NULL ,
	P_PAY_CODE           VARCHAR2(6) NOT NULL ,
	POINT_CHARGE_NO      NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPK其捞搬力郴开 ON P_PAY
(P_PAY_CODE   ASC);



ALTER TABLE P_PAY
	ADD CONSTRAINT  XPKP_PAY_PK PRIMARY KEY (P_PAY_CODE);



CREATE TABLE PAY_STANDARD
(
	PAY_COST             NUMBER(5) NOT NULL ,
	PAY_POINT            NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKPAY_STANDARD_UQ ON PAY_STANDARD
(PAY_COST   ASC);



ALTER TABLE PAY_STANDARD
	ADD CONSTRAINT  XPKPAY_STANDARD_PK PRIMARY KEY (PAY_COST);



CREATE TABLE PH_PAY
(
	PH_NUMBER            NUMBER(11) NULL ,
	PH_OWNER             VARCHAR2(10) NULL ,
	AGENCY               VARCHAR2(5) NULL ,
	PH_PAY_CODE          VARCHAR2(6) NOT NULL ,
	POINT_CHARGE_NO      NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKPH_PAY_UQ ON PH_PAY
(PH_PAY_CODE   ASC);



ALTER TABLE PH_PAY
	ADD CONSTRAINT  XPKPH_PAY_PK PRIMARY KEY (PH_PAY_CODE);



CREATE TABLE POINT_CHARGE
(
	U_NO                 NUMBER(5) NULL ,
	CHARGE_DATE          DATE NULL ,
	TOTAL_U_CHARGED_PAY  NUMBER(10) NULL ,
	TOTAL_U_CHARGED_POINT NUMBER(10) NULL ,
	PAY_COST             NUMBER(5) NULL ,
	POINT_CHARGE_NO      NUMBER(5) NOT NULL ,
	CHARGE_METHOD_CODE   VARCHAR2(3) NULL 
);



CREATE UNIQUE INDEX XPKPOINT_CHARGE_UQ ON POINT_CHARGE
(POINT_CHARGE_NO   ASC);



ALTER TABLE POINT_CHARGE
	ADD CONSTRAINT  XPKPOINT_CHARGE_PK PRIMARY KEY (POINT_CHARGE_NO);



CREATE TABLE RETURN_PICK
(
	RETURN_NO            NUMBER(5) NULL ,
	RETURN_PICK_DATE     DATE NULL ,
	EMPNO                NUMBER(4) NULL ,
	RETURN_PICK_NO       NUMBER(10) NOT NULL 
);



CREATE UNIQUE INDEX XPKRETURN_PICK_UQ ON RETURN_PICK
(RETURN_PICK_NO   ASC);



ALTER TABLE RETURN_PICK
	ADD CONSTRAINT  XPKRETURN_PICK_PK PRIMARY KEY (RETURN_PICK_NO);



CREATE TABLE SHARE_B
(
	S_B_NO               NUMBER(5) NOT NULL ,
	S_B_TITLE            VARCHAR2(100) NULL ,
	S_B_AUTHOR           VARCHAR2(20) NULL ,
	S_B_PUBLISHER        VARCHAR2(20) NULL ,
	S_B_COST             NUMBER(5) NULL ,
	S_B_REGISTER_DATE    DATE NULL ,
	U_NO                 NUMBER(5) NOT NULL 
);



CREATE UNIQUE INDEX XPKSHARE_B_UQ ON SHARE_B
(S_B_NO   ASC);



ALTER TABLE SHARE_B
	ADD CONSTRAINT  XPKSHARE_B_PK PRIMARY KEY (S_B_NO);



CREATE TABLE SHARE_PICKUP
(
	S_B_NO               NUMBER(5) NOT NULL ,
	S_PICK_DATE          DATE NULL ,
	EMPNO                NUMBER(4) NULL ,
	S_PICKUP_NO          NUMBER(10) NOT NULL 
);



CREATE UNIQUE INDEX XPKSHARE_PICKUP_UQ ON SHARE_PICKUP
(S_PICKUP_NO   ASC);



ALTER TABLE SHARE_PICKUP
	ADD CONSTRAINT  XPKSHARE_PICKUP_PK PRIMARY KEY (S_PICKUP_NO);



CREATE TABLE U_GRADE
(
	U_GRADE              VARCHAR2(6) NOT NULL ,
	LOW_SCORE            NUMBER(5) NULL ,
	HIGH_SCORE           NUMBER(5) NULL ,
	MAX_RENT             NUMBER(1) NULL ,
	MAX_RENT_DATE        NUMBER(2) NULL 
);



CREATE UNIQUE INDEX XPKU_GRADE_UQ ON U_GRADE
(U_GRADE   ASC);



ALTER TABLE U_GRADE
	ADD CONSTRAINT  XPKU_GRADE_PK PRIMARY KEY (U_GRADE);



CREATE TABLE USE_POINT
(
	USE_POINT_NO         NUMBER(10) NOT NULL ,
	SPENT_POINT          NUMBER(5) NULL ,
	POINT_DATE           DATE NULL ,
	U_NO                 NUMBER(5) NULL 
);



CREATE UNIQUE INDEX XPKUSE_POINT_UQ ON USE_POINT
(USE_POINT_NO   ASC);



ALTER TABLE USE_POINT
	ADD CONSTRAINT  XPKUSE_POINT_PK PRIMARY KEY (USE_POINT_NO);



CREATE TABLE USER_INFO
(
	U_NO                 NUMBER(5) NOT NULL ,
	U_NAME               VARCHAR2(10) NULL ,
	U_RRN                VARCHAR2(14) NULL ,
	U_PH                 VARCHAR2(13) NULL ,
	U_ADDR               VARCHAR2(50) NULL ,
	U_CHECK              VARCHAR2(2) default 'Y' constraint user_check_ck check(u_check in ('F','Y','N')),
	U_POINT              NUMBER(10) DEFAULT 0,
	U_SCORE              NUMBER(5) DEFAULT 0,
	U_SEX                VARCHAR2(4) constraint user_sex_ck check(u_sex in ('巢己','咯己'))
);



CREATE UNIQUE INDEX XPKUSER_UQ ON USER_INFO
(U_NO   ASC);



ALTER TABLE USER_INFO
	ADD CONSTRAINT  XPKUSER_PK PRIMARY KEY (U_NO);



ALTER TABLE ACC_TRANSFER
	ADD (CONSTRAINT R_67 FOREIGN KEY (POINT_CHARGE_NO) REFERENCES POINT_CHARGE (POINT_CHARGE_NO) ON DELETE SET NULL);



ALTER TABLE B_LIST
	ADD (CONSTRAINT R_19 FOREIGN KEY (S_B_NO) REFERENCES SHARE_B (S_B_NO) ON DELETE SET NULL);



ALTER TABLE B_LIST
	ADD (CONSTRAINT R_36 FOREIGN KEY (CATEGORY_NO) REFERENCES CATEGORY (CATEGORY_NO) ON DELETE SET NULL);



ALTER TABLE B_LIST
	ADD (CONSTRAINT R_39 FOREIGN KEY (B_GRADE) REFERENCES B_GRADE_STANDARD (B_GRADE) ON DELETE SET NULL);



ALTER TABLE B_RENT
	ADD (CONSTRAINT R_8 FOREIGN KEY (U_NO) REFERENCES USER_INFO (U_NO) ON DELETE SET NULL);



ALTER TABLE B_RENT
	ADD (CONSTRAINT R_20 FOREIGN KEY (B_NO) REFERENCES B_LIST (B_NO) ON DELETE SET NULL);



ALTER TABLE B_RETURN
	ADD (CONSTRAINT R_61 FOREIGN KEY (B_RENT_NO) REFERENCES B_RENT (B_RENT_NO) ON DELETE SET NULL);



ALTER TABLE CARD
	ADD (CONSTRAINT R_68 FOREIGN KEY (POINT_CHARGE_NO) REFERENCES POINT_CHARGE (POINT_CHARGE_NO) ON DELETE SET NULL);



ALTER TABLE CATEGORY
	ADD (CONSTRAINT R_35 FOREIGN KEY (SECTION_NO) REFERENCES KDC (SECTION_NO) ON DELETE SET NULL);



ALTER TABLE DELIVERY
	ADD (CONSTRAINT R_25 FOREIGN KEY (EMPNO) REFERENCES EMP (EMPNO) ON DELETE SET NULL);



ALTER TABLE DELIVERY
	ADD (CONSTRAINT R_27 FOREIGN KEY (B_RENT_NO) REFERENCES B_RENT (B_RENT_NO) ON DELETE SET NULL);



ALTER TABLE EMP
	ADD (CONSTRAINT R_24 FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO) ON DELETE SET NULL);



ALTER TABLE EMP
	ADD (CONSTRAINT R_70 FOREIGN KEY (MGR) REFERENCES EMP (EMPNO) ON DELETE SET NULL);



ALTER TABLE GRANT_POINT
	ADD (CONSTRAINT R_62 FOREIGN KEY (B_NO) REFERENCES B_LIST (B_NO) ON DELETE SET NULL);



ALTER TABLE GRANT_POINT
	ADD (CONSTRAINT R_63 FOREIGN KEY (U_NO) REFERENCES USER_INFO (U_NO) ON DELETE SET NULL);



ALTER TABLE OVERDUE
	ADD (CONSTRAINT R_60 FOREIGN KEY (B_RENT_NO) REFERENCES B_RENT (B_RENT_NO) ON DELETE SET NULL);



ALTER TABLE P_PAY
	ADD (CONSTRAINT R_65 FOREIGN KEY (POINT_CHARGE_NO) REFERENCES POINT_CHARGE (POINT_CHARGE_NO) ON DELETE SET NULL);



ALTER TABLE PH_PAY
	ADD (CONSTRAINT R_66 FOREIGN KEY (POINT_CHARGE_NO) REFERENCES POINT_CHARGE (POINT_CHARGE_NO) ON DELETE SET NULL);



ALTER TABLE POINT_CHARGE
	ADD (CONSTRAINT R_44 FOREIGN KEY (U_NO) REFERENCES USER_INFO (U_NO) ON DELETE SET NULL);



ALTER TABLE POINT_CHARGE
	ADD (CONSTRAINT R_45 FOREIGN KEY (PAY_COST) REFERENCES PAY_STANDARD (PAY_COST) ON DELETE SET NULL);



ALTER TABLE POINT_CHARGE
	ADD (CONSTRAINT R_64 FOREIGN KEY (CHARGE_METHOD_CODE) REFERENCES CHARGE_METHOD (CHARGE_METHOD_CODE) ON DELETE SET NULL);



ALTER TABLE RETURN_PICK
	ADD (CONSTRAINT R_11 FOREIGN KEY (RETURN_NO) REFERENCES B_RETURN (RETURN_NO) ON DELETE SET NULL);



ALTER TABLE RETURN_PICK
	ADD (CONSTRAINT R_28 FOREIGN KEY (EMPNO) REFERENCES EMP (EMPNO) ON DELETE SET NULL);



ALTER TABLE SHARE_B
	ADD (CONSTRAINT R_2 FOREIGN KEY (U_NO) REFERENCES USER_INFO (U_NO));



ALTER TABLE SHARE_PICKUP
	ADD (CONSTRAINT R_10 FOREIGN KEY (S_B_NO) REFERENCES SHARE_B (S_B_NO));



ALTER TABLE SHARE_PICKUP
	ADD (CONSTRAINT R_29 FOREIGN KEY (EMPNO) REFERENCES EMP (EMPNO) ON DELETE SET NULL);



ALTER TABLE USE_POINT
	ADD (CONSTRAINT R_57 FOREIGN KEY (U_NO) REFERENCES USER_INFO (U_NO) ON DELETE SET NULL);


